generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User  @map("User")
  Mod   @map("Mod")
  Admin @map("Admin")
}

enum TipoDocumento {
  DNI       @map("DNI")
  Pasaporte @map("Pasaporte")
  Carnet    @map("Carnet de Extranjer√≠a")
  Otro      @map("Otro")
}

model User {
  id_usuario    String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  puntos        Int       @default(0)
  rol           Role      @default(User)

  telefono         String?
  fecha_nacimiento DateTime?
  direccion        String?
  documento        String?
  tipo_doc         TipoDocumento? @default(DNI)

  // pedido           Pedido[]
  account  Account[]
  sessions Session[]

  activo Boolean @default(true)

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id_usuario], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id_usuario], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}
